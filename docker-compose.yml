#version: "3"
#
#services:
#  db:
#    container_name: dangn_db # 컨테이너 이름 설정
#    image: mysql:8.0 # MySQL 8.0 버전 이미지 사용
#    environment: # MySQL에 전달하는 환경 변수
#      MYSQL_ROOT_PASSWORD: yOnSeo315@ # 루트 사용자 비밀번호와
#      MYSQL_DATABASE: ceos_dangn # 데이터베이스 이름
#    volumes: # 호스트 시스템과 컨테이너 간에 데이터를 공유하기 위한 볼륨 설정
#      - dbdata:/var/lib/mysql # MySQL 데이터 디렉토리를 호스트 시스템의 dbdata 볼륨과 연결
#    ports: # 호스트 시스템과 컨테이너 간의 포트 매핑을 설정
#      - 3307:3306 # MySQL의 3306 포트를 호스트의 3306 포트와 연결
#    restart: always # 컨테이너가 종료될 때 항상 다시 시작하도록 설정
#
#  web:
#    container_name: dangn_web # 컨테이너 이름 설정
#    build: . # 현재 디렉토리에서 Dockerfile을 사용해 이미지 빌드
#    ports: # 호스트 시스템과 컨테이너 간의 포트 매핑 설정
#      - "8080:8080" # 웹 어플리케이션의 8080 포트를 호스트의 8080 포트와 연결
#    depends_on: # 의존하는 서비스 설정
#      - db # web 서비스가 시작되기 전에 db 서비스가 먼저 시작되도록 설정
#    environment: # 어플리케이션에서 사용할 환경 변수를 설정
#      mysql_host: db # MySQL 호스트를 db로 설정
#    restart: always # 컨테이너가 종료될 때 항상 다시 시작하도록 설정
#    volumes: # 호스트 시스템과 컨테이너 간에 데이터를 공유하기 위한 볼륨 설정
#      - .:/app # 현재 디렉토리를 호스트의 /app 디렉토리와 연결
#
#volumes:
#  app: # 호스트 시스템과 web 컨테이너 간에 데이터를 공유하기 위한 볼륨
#  dbdata: # 호스트 시스템과 db 컨테이너 간에 MySQL 데이터를 공유하기 위한 볼륨

version: '3'

services:

  mysql:
    container_name: dangn_mysql
    image: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ceos18dangn!
      MYSQL_DATABASE: dangn #ceos18dangn ???
    restart: always

  backend:
    container_name: dangn_backend
    image: yoonsseo/ceos18dangn
    expose:
      - 8080
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - mysql
    environment:
      - TZ=Asia/Seoul